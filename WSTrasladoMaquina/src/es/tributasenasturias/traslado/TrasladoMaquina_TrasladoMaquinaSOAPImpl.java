package es.tributasenasturias.traslado;

import javax.annotation.Resource;
import javax.jws.HandlerChain;
import javax.jws.WebService;
import javax.xml.ws.BindingType;
import javax.xml.ws.Holder;
import javax.xml.ws.WebServiceContext;
import javax.xml.ws.WebServiceException;
import javax.xml.ws.handler.MessageContext;

import es.tributasenasturias.log.TributasLogger;
import es.tributasenasturias.traslado.TrasladoImpl.ResultadoTraslado;
import es.tributasenasturias.traslado.TrasladoMaquinaResponse.RESPUESTA;
import es.tributasenasturias.traslado.exceptions.TrasladoException;
import es.tributasenasturias.traslado.preferencias.Preferencias;
import es.tributasenasturias.traslado.util.Constantes;
import es.tributasenasturias.traslado.util.Utils;

/**
 * This class was generated by the JAX-WS RI. Oracle JAX-WS 2.1.3-06/19/2008
 * 07:03 PM(bt) Generated source version: 2.1
 * 
 */
@WebService(portName = "TrasladoMaquinaSOAP", serviceName = "TrasladoMaquina", targetNamespace = "http://www.tributasenasturias.es/servicios/TrasladoMaquina/", wsdlLocation = "/wsdls/TrasladoMaquina.wsdl", endpointInterface = "es.tributasenasturias.traslado.TrasladoMaquina")
@BindingType("http://schemas.xmlsoap.org/wsdl/soap/http")
@HandlerChain(file="HandlerChain.xml")
public class TrasladoMaquina_TrasladoMaquinaSOAPImpl implements TrasladoMaquina {

	public TrasladoMaquina_TrasladoMaquinaSOAPImpl() {
	}
	@Resource
	WebServiceContext context;
	
	
	/**
	 * 
	 * @param trasladoMaquinaRequest
	 * @param signature
	 * @return returns es.tributasenasturias.traslado.TrasladoMaquinaResponse
	 */
	public TrasladoMaquinaResponse trasladarMaquina(
			TrasladoMaquinaRequest trasladoMaquinaRequest,
			Holder<SignatureType> signature) {
		
		Preferencias pref;
		String idSesion;
		TributasLogger log=null;
		
		TrasladoMaquinaResponse response= new TrasladoMaquinaResponse();
		try{
			MessageContext mc = context.getMessageContext();
		
			if (mc.containsKey(Constantes.PREFERENCIAS))
			{
				pref = (Preferencias) mc.get(Constantes.PREFERENCIAS);
			}
			else
			{
				pref = new Preferencias();
			}
			if (mc.containsKey(Constantes.IDSESION))
			{
				idSesion= (String) mc.get(Constantes.IDSESION);
			}
			else
			{
				idSesion= Utils.getIdLlamada();
			}
			if (mc.containsKey(Constantes.LOG))
			{
				log = (TributasLogger) mc.get(Constantes.LOG);
			}
			else 
			{
				log = new TributasLogger(pref.getModoLog(),pref.getFicheroLogAplicacion(), idSesion);
			}
			TrasladoImpl traslado = new TrasladoImpl(log, pref, idSesion);
			PETICIONType peticion = trasladoMaquinaRequest.getPETICION();
			log.info("Inicio del traslado");
			ResultadoTraslado resultado=traslado.trasladar(peticion.getCIF(), peticion.getNUMAUTOLIQUIDACION(), peticion.getNUMLOCAL(), peticion.getNUMMAQUINA());
			RESPUESTA respuesta= new RESPUESTA();
			respuesta.setRESULTADO(resultado.getCodigo());
			respuesta.setMENSAJE(resultado.getMensaje());
			respuesta.setJUSTIFICANTEPDF(resultado.getPdf());
			response.setRESPUESTA(respuesta);
			response.setPETICION(peticion);
		}catch (TrasladoException te)
		{
			//Devolvemos un error controlado
			log.error("Error inesperado en la ejecución del servicio:" + te.getMessage(), te);
			RESPUESTA respuesta= new RESPUESTA();
			respuesta.setRESULTADO(Constantes.CODIGO_ERROR_DEFECTO);
			respuesta.setMENSAJE(Constantes.MENSAJE_ERROR_DEFECTO);
			response.setRESPUESTA(respuesta);
			response.setPETICION(trasladoMaquinaRequest.getPETICION());
		}catch (Exception e)
		{
			//Estas son excepciones que no sabemos de donde han surgido, generan un SOAPFault
			if (log!=null){
				log.error("Error inesperado en la ejecución del servicio:" + e.getMessage(), e);
			}
			else 
			{
				System.err.println ("Traslado Máquina. Error inesperado en la ejecución del servicio "+ e.getMessage());
				e.printStackTrace(System.err);
			}
			throw new WebServiceException("Error inesperado en la ejecución del servicio");
		}
		finally
		{
			log.info("Fin del traslado");
		}
		signature= null;
		return response;
	}

}
