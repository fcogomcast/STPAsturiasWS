package es.tributasenasturias.services.ws.wsmultas;

import javax.jws.WebService;
import javax.xml.datatype.XMLGregorianCalendar;
import javax.xml.ws.BindingType;
import javax.xml.ws.Holder;

import es.tributasenasturias.services.ws.wsmultas.bd.Datos;
import es.tributasenasturias.services.ws.wsmultas.utils.Respuesta;
import es.tributasenasturias.services.ws.wsmultas.utils.Log.Logger;

/**
 * This class was generated by the JAX-WS RI. Oracle JAX-WS 2.1.3-06/19/2008
 * 07:03 PM(bt) Generated source version: 2.1
 * 
 */
@WebService(portName = "WSMultasSOAP", serviceName = "WSMultas", targetNamespace = "http://WSMultas.ws.services.tributasenasturias.es/WSMultas/", wsdlLocation = "/wsdls/WSMultas.wsdl", endpointInterface = "es.tributasenasturias.services.ws.wsmultas.WSMultas")
@BindingType("http://schemas.xmlsoap.org/wsdl/soap/http")
public class WSMultas_WSMultasSOAPImpl implements WSMultas {

	public WSMultas_WSMultasSOAPImpl() {
	}

	private Logger logger = null;
	/**
	 * 
	 * @param imagenes
	 * @param callePropietario
	 * @param provinciaInfractor
	 * @param distritoPostalConductor
	 * @param hechoDenunciado
	 * @param velocidad
	 * @param nombreCompletoPropietario
	 * @param latitud
	 * @param provinciaPropietario
	 * @param longitud
	 * @param idEper
	 * @param distritoPostalInfractor
	 * @param poblacionPropietario
	 * @param velocidadCorregida
	 * @param ampliacionVia
	 * @param calleConductor
	 * @param propiedades
	 * @param justificante
	 * @param fechaCobro
	 * @param paisConductor
	 * @param retencion
	 * @param dispositivoMedicion
	 * @param nombreCompletoConductor
	 * @param poblacionInfractor
	 * @param modelo
	 * @param horaInfraccion
	 * @param nifConductor
	 * @param paisPropietario
	 * @param suborganismo
	 * @param viaPenal
	 * @param motivoAnulacion
	 * @param idClve
	 * @param velocidadMaxima
	 * @param idTamu
	 * @param paisInfractor
	 * @param fechaInfraccion
	 * @param numBoletin
	 * @param idComa
	 * @param numeroAgenteAgmu
	 * @param numeroRege
	 * @param distritoPostalPropietario
	 * @param nombreCompletoInfractor
	 * @param resultado
	 * @param modificadaDireccion
	 * @param pagado
	 * @param nifInfractor
	 * @param idTimu
	 * @param importe
	 * @param idCamu
	 * @param formaPago
	 * @param codigoArmu
	 * @param codResultado
	 * @param marca
	 * @param udid
	 * @param matricula
	 * @param provinciaConductor
	 * @param hechoDenunciadoCoof
	 * @param poblacionConductor
	 * @param nombreVia
	 * @param calleInfractor
	 * @param numVia
	 * @param nifPropietario
	 * @param numExpediente
	 */
	public void altaMultaRequest(String udid, String suborganismo,
			String numeroAgenteAgmu, String nifPropietario,
			String nombreCompletoPropietario, String paisPropietario,
			String callePropietario, String poblacionPropietario,
			String provinciaPropietario, String distritoPostalPropietario,
			String nifInfractor, String nombreCompletoInfractor,
			String paisInfractor, String calleInfractor,
			String poblacionInfractor, String provinciaInfractor,
			String distritoPostalInfractor, String nifConductor,
			String nombreCompletoConductor, String paisConductor,
			String calleConductor, String poblacionConductor,
			String provinciaConductor, String distritoPostalConductor,
			String matricula, String marca, String modelo, String numBoletin,
			String numExpediente, String codigoArmu, String hechoDenunciado,
			String hechoDenunciadoCoof, String idTimu, String idCamu,
			String idClve, IdTamuType idTamu, CadenaSN viaPenal,
			CadenaSN retencion, Double velocidad, Double velocidadMaxima,
			Double velocidadCorregida, Integer dispositivoMedicion,
			XMLGregorianCalendar fechaInfraccion, String horaInfraccion,
			String nombreVia, String numVia, String ampliacionVia,
			Double latitud, Double longitud, String pagado, String formaPago,
			XMLGregorianCalendar fechaCobro, String importe,
			String justificante, String motivoAnulacion,
			PropiedadesType propiedades, ImagenesType imagenes, String idComa,
			CadenaSN modificadaDireccion, Holder<String> codResultado,
			Holder<String> resultado, Holder<String> idEper,
			Holder<String> numeroRege) {
		logger = new Logger();
		try{
			logger.trace("INICIO LLAMADA METODO WEB AltaMultas");

			AltaMulta consulta = new AltaMulta();
			Respuesta resultadoConsulta = consulta.darAltaMulta(udid, suborganismo, numeroAgenteAgmu, nifPropietario, nombreCompletoPropietario, paisPropietario, callePropietario, poblacionPropietario, provinciaPropietario, distritoPostalPropietario, nifInfractor, nombreCompletoInfractor, paisInfractor, calleInfractor, poblacionInfractor, provinciaInfractor, distritoPostalInfractor, nifConductor, nombreCompletoConductor, paisConductor, calleConductor, poblacionConductor, provinciaConductor, distritoPostalConductor, matricula, marca, modelo, numBoletin, numExpediente, codigoArmu, hechoDenunciado, hechoDenunciadoCoof, idTimu, idCamu, idClve, idTamu, viaPenal, retencion, velocidad, velocidadMaxima, velocidadCorregida, dispositivoMedicion, fechaInfraccion, horaInfraccion, nombreVia, numVia, ampliacionVia, latitud, longitud, pagado, formaPago, fechaCobro, importe, justificante, motivoAnulacion, propiedades, imagenes, idComa, modificadaDireccion);
			codResultado.value = resultadoConsulta.getCodresultado();
			resultado.value = resultadoConsulta.getResultado();
			idEper.value = resultadoConsulta.getIdeper();
			numeroRege.value = resultadoConsulta.getNumerorege();

			logger.trace("FIN LLAMADA METODO WEB AltaMultas");
		}catch (Exception ex){
			logger.error("Error en la ejecución del servicio web AltaMultas: " + ex.getMessage());
		}
		return;
	}

	/**
	 * 
	 * @param error
	 * @param fecha
	 * @param municipio
	 * @param ficheroB64
	 * @param tabla
	 */
	public void multasExternasObtenerTablasRequest(int municipio, String tabla,
			Holder<String> fecha, Holder<String> error,
			Holder<String> ficheroB64) {
		
		logger = new Logger();
		logger.info("Petición multasExternasObtenerTablasRequest");
		logger.info("municipio:" + municipio);
		logger.info("tabla:" + tabla);
		logger.info("fecha:" + fecha);
		
		
		Datos datos = new Datos();
		datos.multasExternasObtenerTablas(municipio, tabla, fecha, error, ficheroB64);

		logger.info("datosArchivo:" + ficheroB64.value);
		if(error.value!="")
			logger.error("ERROR:" + error.value);
		
		return;
	}

}
