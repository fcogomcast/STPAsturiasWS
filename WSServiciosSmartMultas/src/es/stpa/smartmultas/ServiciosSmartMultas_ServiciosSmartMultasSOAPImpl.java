package es.stpa.smartmultas;

import javax.annotation.Resource;
import javax.jws.HandlerChain;
import javax.jws.WebService;
import javax.xml.ws.BindingType;
import javax.xml.ws.WebServiceContext;
import javax.xml.ws.WebServiceException;

import org.w3c.dom.Document;

import es.stpa.smartmultas.clases.AltaDocumentoBoletinMultas;
import es.stpa.smartmultas.clases.AltaMulta;
import es.stpa.smartmultas.clases.ArchivarExpediente;
import es.stpa.smartmultas.clases.CambiarPassword;
import es.stpa.smartmultas.clases.ConsultaExpedientesPendientesRatificar;
import es.stpa.smartmultas.clases.ConsultaFechaHora;
import es.stpa.smartmultas.clases.ConsultaMatriculaATEX;
import es.stpa.smartmultas.clases.ConsultaNifATEX;
import es.stpa.smartmultas.clases.ConsultaMatriculaOCR;
import es.stpa.smartmultas.clases.GetFileStatus;
import es.stpa.smartmultas.clases.InsertarNota;
import es.stpa.smartmultas.clases.ObtenerConfiguracion;
import es.stpa.smartmultas.clases.ObtenerConfiguracionOrganismo;
import es.stpa.smartmultas.clases.ObtenerTablas;
import es.stpa.smartmultas.clases.Ratificar;
import es.stpa.smartmultas.clases.UploadFilePiece;
import es.stpa.smartmultas.configuracion.utils.Utiles;
import es.stpa.smartmultas.preferencias.Preferencias;
import es.stpa.smartmultas.preferencias.PreferenciasException;
import es.stpa.smartmultas.soap.SOAPUtils;
import es.tributasenasturias.log.ILog;
import es.tributasenasturias.xml.XMLDOMUtils;

/**
 * This class was generated by the JAX-WS RI. Oracle JAX-WS 2.1.3-06/19/2008
 * 07:03 PM(bt) Generated source version: 2.1
 * 
 */
@WebService(portName = "ServiciosSmartMultasSOAP", serviceName = "ServiciosSmartMultas", targetNamespace = "http://www.gtt.es/WS", wsdlLocation = "/wsdls/ServiciosSmartMultas.wsdl", endpointInterface = "es.stpa.smartmultas.ServiciosSmartMultas")
@BindingType("http://schemas.xmlsoap.org/wsdl/soap/http")
@HandlerChain(file = "./HandlerChain.xml")
public class ServiciosSmartMultas_ServiciosSmartMultasSOAPImpl implements ServiciosSmartMultas {

	@Resource WebServiceContext wcontext;

	public ServiciosSmartMultas_ServiciosSmartMultasSOAPImpl() { }

	/**
	 * Implementación de la operación de XmlRequest del servicio
	 * 
	 * @param operacion
	 * @param sesionOrga
	 * @param sesionId
	 * @param parameters
	 * @return returns String
	 */
	public XmlResponse xmlRequest(XmlRequest parameters, String sesionOrga, String sesionId, String operacion) {
		
		ILog log = null;
		XmlResponse xmlRespuesta = new XmlResponse();
		String datosRespuesta = null, errorRespuesta = null;
		
		try
		{
			// Primero, cargamos las variables con la información
			Preferencias pref = (Preferencias) wcontext.getMessageContext().get(Constantes.PREFERENCIAS);
			
			if (pref == null) 
			{
				pref = new Preferencias();
			}

			String idLlamada = (String) wcontext.getMessageContext().get(Constantes.IDSESION);
			if (idLlamada == null) 
			{
				idLlamada = SOAPUtils.getIdLlamada();
			}
			
			log = Utiles.gestionarLog(pref, idLlamada, wcontext);

			Document datosEntrada = XMLDOMUtils.parseXml(parameters.getXmlDataRequest()); // Contiene el xml de entrada

			if (datosEntrada != null) 
			{
				// Puede devolver texto de error directamente en esta llamada
				datosRespuesta = controlarAccesoPL(operacion, pref, idLlamada, datosEntrada, log);		
			}
		} 
		catch (PreferenciasException e) 
		{
			if (log != null) 
			{
				log.error("Error en la ejecución de proceso:" + e.getMessage(), e);
			}
			throw new WebServiceException("Error en la ejecución de proceso.", e);
		}
		catch (Exception ex) 
		{
			errorRespuesta = "Error en la ejecución de proceso:" + ex.getMessage();
			
			if (log != null) { log.error(errorRespuesta, ex); }
		} 
		finally 
		{
			if (log != null) 
			{
				log.info("Salida de operación XmlRequest");
			}
			
			if(errorRespuesta != null) { datosRespuesta = errorRespuesta; }
			
			xmlRespuesta.setXmlDataResponse(datosRespuesta);
		}
		
		return xmlRespuesta;
	}

	private String controlarAccesoPL(String operacion, Preferencias pref, String idLlamada, Document datosEntrada, ILog log) {
		
		String datosRespuesta = null;
		operacion = operacion.toLowerCase();
		
		try 
		{
			if (operacion.contains("altadocumentoboletinmultas")) 
			{
				Integer suborga = 33004;
				// Este servicio no debe invocarse individualmente, sino que se invocará desde AltaMulta
				datosRespuesta = new AltaDocumentoBoletinMultas(pref, idLlamada, datosEntrada, suborga, log).Inicializar();
			}
			else if (operacion.contains("altamulta")) 
			{
				datosRespuesta = new AltaMulta(pref, idLlamada, datosEntrada, log).Inicializar();
			}
			else if (operacion.contains("archivarexpediente")) 
			{
				datosRespuesta = new ArchivarExpediente(pref, idLlamada, datosEntrada, log).Inicializar();
			}
			else if (operacion.contains("cambiarpassword")) 
			{
				datosRespuesta = new CambiarPassword(pref, idLlamada, datosEntrada, log).Inicializar();
			}
			else if (operacion.contains("consultaexpedientespendientesratificar")) 
			{
				datosRespuesta = new ConsultaExpedientesPendientesRatificar(pref, idLlamada, datosEntrada, log).Inicializar();
			}
			else if (operacion.contains("consultafechahora")) 
			{
				datosRespuesta = new ConsultaFechaHora(pref, idLlamada, datosEntrada, log).Inicializar();
			}
			else if (operacion.contains("consultamatriculaatex")) 
			{
				datosRespuesta = new ConsultaMatriculaATEX(pref, idLlamada, datosEntrada, log).Inicializar();
			}
			else if (operacion.contains("consultamatriculaocr")) 
			{
				datosRespuesta = new ConsultaMatriculaOCR(pref, idLlamada, datosEntrada, log).Inicializar();
			}
			else if (operacion.contains("consultanifatex")) // de momento no se implementa
			{
				datosRespuesta = new ConsultaNifATEX(pref, idLlamada, datosEntrada, log).Inicializar();
			}
			else if (operacion.contains("getfilestatus")) 
			{
				datosRespuesta = new GetFileStatus(pref, idLlamada, datosEntrada, log).Inicializar();
			}
			else if (operacion.contains("insertarnota")) 
			{
				datosRespuesta = new InsertarNota(pref, idLlamada, datosEntrada, log).Inicializar();
			}
			else if (operacion.equalsIgnoreCase("serviciossmartfines.multas.obtenerconfiguracion"))
			{ 
				datosRespuesta = new ObtenerConfiguracion(pref, idLlamada, datosEntrada, log).Inicializar();
			}
			else if (operacion.contains("obtenerconfiguracionorganismo")) 
			{
				datosRespuesta = new ObtenerConfiguracionOrganismo(pref, idLlamada, datosEntrada, log).Inicializar();
			}
			else if (operacion.contains("obtenertablas")) 
			{
				datosRespuesta = new ObtenerTablas(pref, idLlamada, datosEntrada, log).Inicializar();
			}
			else if (operacion.contains("ratificar")) 
			{
				datosRespuesta = new Ratificar(pref, idLlamada, datosEntrada, log).Inicializar();
			}
			else if (operacion.contains("uploadfilepiece")) 
			{
				datosRespuesta = new UploadFilePiece(pref, idLlamada, datosEntrada, log).Inicializar();
			}
		} 
		catch (Exception ex) 
		{			
			datosRespuesta = "Error al ejecutar la petición: " + ex.getMessage();
		}
		
		return datosRespuesta;
	}
}
